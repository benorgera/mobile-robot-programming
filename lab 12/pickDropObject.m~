function pickDropObject(robot, vel)
global robotPose

robot.forksDown()

sailPoseRel = findSailRelative(robot);
sailPoseAbs = robToWorld(sailPoseRel);

plotDriving = true;

acqPoseVecRel = MRPLsystem.acquisitionPose(sailPoseRel, 0.07, true);

disp(acqPose

acqPoseVecAbs = robToWorld(acqPoseVecRel);

turn = atan2(acqPoseVecRel(2), acqPoseVecRel(1));
disp(acqPoseVecRel)

if (abs(turn) > pi / 4)
    ref = linearOrAngularTrajectory.turnRelAngle(turn);
    traj = robotTrajectory(201, 0, robotPose(1:3), ref);
    fol = trajectoryFollower(traj, true, 1.5, plotDriving);
    fol.execute(true, true)
end

xf = acqPoseVecAbs(1); yf = acqPoseVecAbs(2); thAcq = acqPoseVecAbs(3);
traj = cubicSpiralTrajectory.planTrajectory(xf,yf,thAcq,1,true);
traj.planVelocities(vel,true,true);
fol = trajectoryFollower(traj, true, 3, plotDriving);
fol.execute(true, true);

% % pass estimate of where sail is to speed things up
% sailPoseRel2 = findSailRelative(robot, sailPoseAbs);
% sailPoseAbs2 = robToWorld(sailPoseRel2);
% 
% traj = cubicSpiralTrajectory.planTrajectory(sailPoseAbs2(1),...
%     sailPoseAbs2(2),sailPoseAbs2(3),1,true);
% traj.planVelocities(vel * 0.5,true,true);
% fol = trajectoryFollower(traj, true, 5, plotDriving);
% fol.execute(true, true);
% 
% robot.forksUp()
% pause(0.2)




end